version: '3.8'

services:
  # Frontend Development
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8090
      - REACT_APP_WS_URL=ws://localhost:8090
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend-dev
    networks:
      - truckify-dev-network
    restart: unless-stopped

  # Backend Development
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8090:8080"
    environment:
      - DATABASE_URL=postgresql://truckify:truckify_password@postgres-dev:5432/truckify?sslmode=disable
      - REDIS_URL=redis://redis-dev:6379
      - JWT_SECRET=dev-secret-key-change-in-production
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq-dev:5672/
      - API_PORT=8080
      - GIN_MODE=debug
    volumes:
      - ./backend:/app
    depends_on:
      - postgres-dev
      - redis-dev
      - rabbitmq-dev
    networks:
      - truckify-dev-network
    restart: unless-stopped

  # PostgreSQL Development
  postgres-dev:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=truckify
      - POSTGRES_USER=truckify
      - POSTGRES_PASSWORD=truckify_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - truckify-dev-network
    restart: unless-stopped

  # Redis Development
  redis-dev:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"
    networks:
      - truckify-dev-network
    restart: unless-stopped

  # RabbitMQ Development
  rabbitmq-dev:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_dev_data:/var/lib/rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    networks:
      - truckify-dev-network
    restart: unless-stopped

  # Development Tools
  adminer:
    image: adminer:latest
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres-dev
    networks:
      - truckify-dev-network
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  rabbitmq_dev_data:
    driver: local

networks:
  truckify-dev-network:
    driver: bridge 